(this["webpackJsonpaffine-break-out"]=this["webpackJsonpaffine-break-out"]||[]).push([[0],{197:function(e,t,c){"use strict";c.r(t),c.d(t,"Index",(function(){return k}));var n=c(1),s=c.n(n),r=c(74),i=c.n(r),j=c(18),d=c(6),l=(c(83),c(2)),h=c(3),o=c(5),a=c(4),b=(c(84),[1,2,3,4,5,7,8,11]),x=function(e,t,c){var n=11,s=2;16==c&&(n=7,s=1);for(var r=0,i=e,j=t;i&&j;)1&j&&(r^=i),j>>=1,i&1<<s?i=i<<1^n:i<<=1;return r},O=function(e){for(var t=function(t){return t<e?t:"N"},c=function(e){var t=b.slice(-1)[0];for(var c in b.reverse()){if(!(b[c]*b[c]>=e))return t;t=b[c]}}(e),n=[c+1],s=0;s<c+1;s++){n[s]=new Array(c);for(var r=0;r<c;r++)n[s][r]=new Array(c)}if(4===c||8===c)for(var i=0;i<c;i++)for(var j=0;j<c;j++)for(var d=0;d<c;d++)n[i][j][d]=t(d+(x(i,d,e)^j)*c);else for(var l=0;l<c;l++)for(var h=0;h<c;h++)for(var o=0;o<c;o++)n[l][h][o]=t(o+(l*o+h)%c*c);for(var a=0;a<c;a++)for(var O=0;O<c;O++)n[c][a][O]=t(a+O*c);return n},p=c(0),u=function(e){Object(o.a)(c,e);var t=Object(a.a)(c);function c(e){var n;return Object(l.a)(this,c),(n=t.call(this,e)).handleChange=function(e){n.setState({groupSize:e.target.value})},n.handleSubmit=function(e){n.setState({groupSize:n.state.groupSize}),e.preventDefault()},n.state={groupSize:25},n}return Object(h.a)(c,[{key:"render",value:function(){var e=this.state.groupSize>1?this.state.groupSize:2,t=O(e);return Object(p.jsxs)("div",{className:"App",children:[Object(p.jsx)("form",{onSubmit:this.handleSubmit,className:"Search",children:Object(p.jsxs)("label",{children:["Your group size:",Object(p.jsx)("input",{type:"number",value:this.state.groupSize,onChange:this.handleChange,size:"3",min:"2",max:"121"})," (2-121)"]})}),Object(p.jsx)("div",{className:"App-header",children:t.map((function(e,t){return Object(p.jsxs)("p",{children:[Object(p.jsxs)("strong",{children:["Round ",t+1]}),": ",e.map((function(e){return Object(p.jsxs)("span",{children:["[",e.join(", "),"] "]})}))]})}))})]})}}]),c}(s.a.Component);var f=function(){return Object(p.jsx)("div",{className:"App",children:Object(p.jsxs)("div",{className:"App-text",children:[Object(p.jsxs)("p",{children:["Once upon a time, we wanted to split 21 people into reasonable sized groups over a couple of rounds such that everyone see each other exactly once. We couldn't solve it. Few years later, I looked back and realised that by using ",Object(p.jsx)("em",{children:"affine planes"})," it can be easily ",Object(p.jsx)("em",{children:"solved"}),"."]}),Object(p.jsxs)("p",{children:[Object(p.jsx)("em",{children:"Affine plane"})," is a concept in abstract algebra / geometry, which allows us to solve this problem. Therefore, the name - ",Object(p.jsx)("em",{children:"Affine Break Out Room"}),". More details in the ",Object(p.jsx)(j.b,{to:"./theory",children:"theory"})," part."]}),Object(p.jsxs)("pre",{children:["Round 1: [0, 1, 2, 3, 4] [5, 6, 7, 8, 9] [10, 11, 12, 13, 14] [15, 16, 17, 18, 19] [20, N, N, N, N]",Object(p.jsx)("br",{}),"Round 2: [0, 6, 12, 18, N] [5, 11, 17, N, 4] [10, 16, N, 3, 9] [15, N, 2, 8, 14] [20, 1, 7, 13, 19]",Object(p.jsx)("br",{}),"Round 3: [0, 11, N, 8, 19] [5, 16, 2, 13, N] [10, N, 7, 18, 4] [15, 1, 12, N, 9] [20, 6, 17, 3, 14]",Object(p.jsx)("br",{}),"Round 4: [0, 16, 7, N, 14] [5, N, 12, 3, 19] [10, 1, 17, 8, N] [15, 6, N, 13, 4] [20, 11, 2, 18, 9]",Object(p.jsx)("br",{}),"Round 5: [0, N, 17, 13, 9] [5, 1, N, 18, 14] [10, 6, 2, N, 19] [15, 11, 7, 3, N] [20, 16, 12, 8, 4]",Object(p.jsx)("br",{}),"Round 6: [0, 5, 10, 15, 20] [1, 6, 11, 16, N] [2, 7, 12, 17, N] [3, 8, 13, 18, N] [4, 9, 14, 19, N]",Object(p.jsx)("br",{})]}),Object(p.jsxs)("p",{children:["We are aware that there are other ways how to solve this problem, e.g. using ",Object(p.jsx)("em",{children:"Kirkman Triple System"}),", which can split 21 people into 7 groups over 10 rounds perfectly. Other solutions are either inefficient (10 rounds per 3 people) or don't include all pairs. Therefore, affine plane sounds like reasonable solution for small group sizes. For other group sizes, I recommend to use ",Object(p.jsx)("a",{href:"http://breakoutroom.pythonanywhere.com/allocate/",children:"BoRAT"})," - a handy tool with a nice ",Object(p.jsx)("a",{href:"https://www.mdpi.com/2073-8994/13/1/13",children:"paper"})," about it."]})]})})},m=c(76),v=c.n(m),w=c(22),g=function(e){for(var t=[(e+1)*e],c=0;c<e;c++)for(var n=0;n<e;n++){t[c*e+n]={label:"".concat(c,"x+").concat(n),showLine:!0,borderColor:"rgba(".concat(80*(3-c%3),", ").concat(80*c,", ").concat(80*(c%3+1),", 1)"),pointRadius:5,pointHitRadius:5,cubicInterpolationMode:"monotone",data:new Array(e)};for(var s=0;s<e;s++)t[c*e+n].data[s]=e%2?{x:s,y:(c*s+n)%e}:{x:s,y:x(c,s,e*e)^n}}for(var r=0;r<e;r++){t[(e+1)*(e-1)+r+1]={label:"inf".concat(r,"+"),showLine:!0,borderColor:"rgba(".concat(80*(1-e%2),", ").concat(80*e,", ").concat(e%2*80,", 1)"),pointRadius:5,pointHitRadius:5,cubicInterpolationMode:"monotone",data:new Array(e)};for(var i=0;i<e;i++)t[(e+1)*(e-1)+r+1].data[i]={x:r,y:i}}return{labels:["Scatter"],datasets:t}},y={responsive:!0,aspectRatio:1,animation:!1,scales:{y:{ticks:{stepSize:1}},x:{ticks:{stepSize:1}}},plugins:{legend:{display:!1},tooltip:{enabled:!1}}};var N=function(){var e=g(3),t=g(4),c=g(5),n=g(7),s=g(8),r=y;return Object(p.jsx)("div",{className:"App",children:Object(p.jsxs)("div",{className:"App-text",children:[Object(p.jsxs)("p",{children:["An affine plane is a two dimensional ",Object(p.jsx)("a",{href:"https://mathworld.wolfram.com/AffineGeometry.html",children:"affine geometry"})," constructed over a ",Object(p.jsx)("a",{href:"https://en.wikipedia.org/wiki/Finite_field",children:"finite field"})," (or Galois field), where points and lines satisfy those axioms: [1, 2]"]}),Object(p.jsxs)("ul",{children:[Object(p.jsx)("li",{children:"Given any two points, there is a unique line joining any two points."}),Object(p.jsx)("li",{children:"Each line has at least two points."}),Object(p.jsxs)("li",{children:["Given a point ",Object(p.jsx)("b",{children:"P"})," and a line ",Object(p.jsx)("b",{children:"L"})," not containing ",Object(p.jsx)("b",{children:"P"}),", there is a unique line that contains ",Object(p.jsx)("b",{children:"P"})," and does not intersect ",Object(p.jsx)("b",{children:"P"})]}),Object(p.jsx)("li",{children:"There exist three non-collinear points (points not on a single line)"})]}),Object(p.jsx)("p",{children:"For an affine plane with finite number of points a following is true: [1]"}),Object(p.jsxs)("ul",{children:[Object(p.jsx)("li",{children:"each line contains n points"}),Object(p.jsxs)("li",{children:["each point is contained in ",Object(p.jsx)("code",{children:"n + 1"})," distinct lines"]}),Object(p.jsxs)("li",{children:["there are ",Object(p.jsxs)("code",{children:["n",Object(p.jsx)("sup",{children:"2"})]})," points in each line"]}),Object(p.jsxs)("li",{children:["there are ",Object(p.jsxs)("code",{children:["n",Object(p.jsx)("sup",{children:"2"})," + n"]})," lines"]}),Object(p.jsxs)("i",{children:["The number ",Object(p.jsx)("code",{children:"n"})," is called the order of the affine plane."]})]}),Object(p.jsxs)("p",{children:["Equivalently, we can replace ",Object(p.jsx)("b",{children:"point"})," with ",Object(p.jsx)("b",{children:"person"})," and ",Object(p.jsx)("b",{children:"line"})," with ",Object(p.jsx)("b",{children:"room"}),". Therefore, we have:"]}),Object(p.jsxs)("ul",{children:[Object(p.jsxs)("li",{children:["each ",Object(p.jsx)("em",{children:"room"})," contains ",Object(p.jsx)("code",{children:"n"})," ",Object(p.jsx)("em",{children:"persons"})]}),Object(p.jsxs)("li",{children:["each ",Object(p.jsx)("em",{children:"person"})," is in ",Object(p.jsx)("code",{children:"n + 1"})," distinct ",Object(p.jsx)("em",{children:"rooms"})]}),Object(p.jsxs)("li",{children:["there are ",Object(p.jsxs)("code",{children:["n",Object(p.jsx)("sup",{children:"2"})]})," ",Object(p.jsx)("em",{children:"persons"})," in total"]}),Object(p.jsxs)("li",{children:["there are ",Object(p.jsxs)("code",{children:["n",Object(p.jsx)("sup",{children:"2"})," + n"]})," ",Object(p.jsx)("em",{children:"rooms"})]})]}),Object(p.jsx)("h3",{children:"Example: Affine plane of order 3 or how to break out 9 people"}),Object(p.jsxs)("p",{children:["Let's take a field ",Object(p.jsxs)("strong",{children:["F",Object(p.jsx)("sub",{children:"3"})]})," with elements ",Object(p.jsx)("code",{children:"{0, 1, 2}"})," with addition and multiplication. [3]"]}),Object(p.jsxs)("table",{children:[Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"+"}),Object(p.jsx)("th",{children:"0"}),Object(p.jsx)("th",{children:"1"}),Object(p.jsx)("th",{children:"2"})]}),Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"0"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("td",{children:"1"}),Object(p.jsx)("td",{children:"2"})]}),Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"1"}),Object(p.jsx)("td",{children:"1"}),Object(p.jsx)("td",{children:"2"}),Object(p.jsx)("td",{children:"0"})]}),Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"2"}),Object(p.jsx)("td",{children:"2"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("td",{children:"1"})]})]}),Object(p.jsxs)("table",{children:[Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"x"}),Object(p.jsx)("th",{children:"0"}),Object(p.jsx)("th",{children:"1"}),Object(p.jsx)("th",{children:"2"})]}),Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"0"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("td",{children:"0"})]}),Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"1"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("td",{children:"1"}),Object(p.jsx)("td",{children:"2"})]}),Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"2"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("td",{children:"2"}),Object(p.jsx)("td",{children:"1"})]})]}),Object(p.jsxs)("p",{children:["Now, each point is defined as a pair ",Object(p.jsxs)("code",{children:["x, y \u2208 ",Object(p.jsxs)("strong",{children:["F",Object(p.jsx)("sub",{children:"3"})]})]}),", therefore, the total number of points is ",Object(p.jsxs)("code",{children:["n",Object(p.jsx)("sup",{children:"2"})]}),". Then we can draw lines given by ",Object(p.jsx)("code",{children:"y = mx + u"}),", where ",Object(p.jsxs)("code",{children:["m, u \u2208 ",Object(p.jsxs)("strong",{children:["F",Object(p.jsx)("sub",{children:"3"})]})]}),". Each ",Object(p.jsx)("code",{children:"m"})," give us a set of distinct lines for each ",Object(p.jsx)("code",{children:"u"}),"."]}),Object(p.jsxs)("table",{className:"big",children:[Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"m=0"}),Object(p.jsx)("th",{children:"x=0"}),Object(p.jsx)("th",{children:"x=1"}),Object(p.jsx)("th",{children:"x=2"}),Object(p.jsx)("th",{children:"m=1"}),Object(p.jsx)("th",{children:"x=0"}),Object(p.jsx)("th",{children:"x=1"}),Object(p.jsx)("th",{children:"x=2"})]}),Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"u=0"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("th",{children:"u=0"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("td",{children:"1"}),Object(p.jsx)("td",{children:"2"})]}),Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"u=1"}),Object(p.jsx)("td",{children:"1"}),Object(p.jsx)("td",{children:"1"}),Object(p.jsx)("td",{children:"1"}),Object(p.jsx)("th",{children:"u=1"}),Object(p.jsx)("td",{children:"1"}),Object(p.jsx)("td",{children:"2"}),Object(p.jsx)("td",{children:"0"})]}),Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"u=2"}),Object(p.jsx)("td",{children:"2"}),Object(p.jsx)("td",{children:"2"}),Object(p.jsx)("td",{children:"2"}),Object(p.jsx)("th",{children:"u=2"}),Object(p.jsx)("td",{children:"2"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("td",{children:"1"})]})]}),Object(p.jsxs)("table",{className:"big",children:[Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"m=2"}),Object(p.jsx)("th",{children:"x=0"}),Object(p.jsx)("th",{children:"x=1"}),Object(p.jsx)("th",{children:"x=2"}),Object(p.jsx)("th",{children:"m=\u221e"}),Object(p.jsx)("th",{children:"x=0"}),Object(p.jsx)("th",{children:"x=1"}),Object(p.jsx)("th",{children:"x=2"})]}),Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"u=0"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("td",{children:"2"}),Object(p.jsx)("td",{children:"1"}),Object(p.jsx)("th",{children:"u=0"}),Object(p.jsx)("td",{children:"[0, \u221e)"}),Object(p.jsx)("td",{children:"[0, \u221e)"}),Object(p.jsx)("td",{children:"[0, \u221e)"})]}),Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"u=1"}),Object(p.jsx)("td",{children:"1"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("td",{children:"2"}),Object(p.jsx)("th",{children:"u=1"}),Object(p.jsx)("td",{children:"[1, \u221e)"}),Object(p.jsx)("td",{children:"[1, \u221e)"}),Object(p.jsx)("td",{children:"[1, \u221e)"})]}),Object(p.jsxs)("tr",{children:[Object(p.jsx)("th",{children:"u=2"}),Object(p.jsx)("td",{children:"2"}),Object(p.jsx)("td",{children:"1"}),Object(p.jsx)("td",{children:"0"}),Object(p.jsx)("th",{children:"u=2"}),Object(p.jsx)("td",{children:"[2, \u221e)"}),Object(p.jsx)("td",{children:"[2, \u221e)"}),Object(p.jsx)("td",{children:"[2, \u221e)"})]})]}),Object(p.jsxs)("p",{children:["See the image below, for each ",Object(p.jsx)("code",{children:"m"})," we have 3 set of lines corresponding to different ",Object(p.jsx)("code",{children:"u"}),". Red correspond to ",Object(p.jsx)("code",{children:"m=0"}),", purple ",Object(p.jsx)("code",{children:"m=1"}),", blue is ",Object(p.jsx)("code",{children:"m=2"})," and green, if you say, is ",Object(p.jsx)("code",{children:"m=\u221e"}),"."]}),Object(p.jsx)("div",{className:"chart",children:Object(p.jsx)(w.a,{data:e,className:"chart",options:r})}),Object(p.jsxs)("p",{children:["Every color or ",Object(p.jsx)("code",{children:"m"})," value is one round and every class or ",Object(p.jsx)("code",{children:"u"})," is a room, where 3 three people are located. To put it all together, this is the full schedule for 9 people over 4 rounds:"]}),Object(p.jsxs)("pre",{children:["Round 1: [0, 1, 2], [3, 4, 5], [6, 7, 8] ",Object(p.jsx)("br",{}),"Round 2: [0, 4, 8], [3, 7, 2], [6, 1, 5] ",Object(p.jsx)("br",{}),"Round 3: [0, 7, 5], [3, 1, 8], [6, 4, 2] ",Object(p.jsx)("br",{}),"Round 4: [0, 3, 6], [1, 4, 7], [2, 5, 8] ",Object(p.jsx)("br",{})]}),Object(p.jsxs)("p",{children:["You can do it in the same way for any other ",Object(p.jsx)("code",{children:"n"}),"-",Object(p.jsx)("em",{children:"prime"})," (",Object(p.jsx)("code",{children:"n=2, 3, 5, 7, 11,..."}),"). However, finite / Galois fields exist also for prime factors such as ",Object(p.jsxs)("code",{children:["n=p",Object(p.jsx)("sup",{children:"m"})]}),". The construction and arithmetic on such fields is a bit harder to explain, and therefore, you can nice construction of ",Object(p.jsxs)("code",{children:["n=2",Object(p.jsx)("sup",{children:"2"})]})," in Stackexchange [3]."]}),Object(p.jsx)("p",{children:"If you need to make schedule for less than 9 people, e.g. 7 you can remove 7 and 8 from the table."}),Object(p.jsx)("h3",{children:"Lines on affine plane of order 4"}),Object(p.jsx)("div",{className:"chart",children:Object(p.jsx)(w.a,{data:t,className:"chart",options:r})}),Object(p.jsx)("h3",{children:"Lines on affine plane of order 5"}),Object(p.jsx)("div",{className:"chart",children:Object(p.jsx)(w.a,{data:c,className:"chart",options:r})}),Object(p.jsx)("h3",{children:"Lines on affine plane of order 7"}),Object(p.jsx)("div",{className:"chart",children:Object(p.jsx)(w.a,{data:n,className:"chart",options:r})}),Object(p.jsx)("h3",{children:"Lines on affine plane of order 8"}),Object(p.jsx)("div",{className:"chart",children:Object(p.jsx)(w.a,{data:s,className:"chart",options:r})}),Object(p.jsxs)("h3",{children:["Arithmetic on finite fields of order 2",Object(p.jsx)("sup",{children:"n"})]}),Object(p.jsxs)("p",{children:["Basic operations on finite fields of prime order are pretty simple every calculation is ",Object(p.jsx)("code",{children:"(mod p)"}),". However, for prime factor orders fields it is way harder. Fortunately, for fields of order ",Object(p.jsxs)("code",{children:["2",Object(p.jsx)("sup",{children:"n"})]}),"we can construct the arithmetic using bitewise operations such as those described in [4] and the script below."]}),Object(p.jsx)(v.a,{gist:"matejker/e88719bf5fd0e0e41eeeaa917a0ff583",wrapperClass:"gist__bash",loadingClass:"loading__screen",titleClass:"gist__title",contentClass:"gist__content",errorClass:"gist__error",file:"BinaryFiniteField.py"}),Object(p.jsx)("h3",{children:"References:"}),Object(p.jsxs)("ol",{children:[Object(p.jsxs)("li",{children:['Pascoe, Abraham, "',Object(p.jsx)("em",{children:"Affine and Projective Planes"}),'" (2018). MSU Graduate Theses. 3233. ',Object(p.jsx)("a",{href:"https://bearworks.missouristate.edu/theses/3233",children:"Link"})]}),Object(p.jsxs)("li",{children:['Bartlett, Padraic, "',Object(p.jsx)("em",{children:"Minilecture 5: Affine Planes"}),'" (2014).',Object(p.jsx)("a",{href:"http://web.math.ucsb.edu/~padraic/ucsb_2013_14/mathcs103_w2014/mathcs103_w2014_lecture5.pdf",children:"Link"})]}),Object(p.jsxs)("li",{children:['von Gagern, Martin, "',Object(p.jsx)("em",{children:"Affine Plane of Order 4 Picture?"}),'" (2016). Mathematics Stack Exchange.',Object(p.jsx)("a",{href:"https://math.stackexchange.com/questions/1925479/affine-plane-of-order-4-picture",children:"Link"})]}),Object(p.jsxs)("li",{children:['Kerl, John, "',Object(p.jsx)("em",{children:'Computation in finite fields" (2004).'}),'" ',Object(p.jsx)("a",{href:"https://johnkerl.org/doc/ffcomp.pdf",children:"Link"})]})]})]})})},k=function(){return Object(p.jsxs)(j.a,{children:[Object(p.jsx)("h1",{children:"Affine Break Out Room"}),Object(p.jsxs)("menu",{children:[Object(p.jsx)("li",{children:Object(p.jsx)(j.b,{to:"/affine-break-out/",children:"Home"})}),Object(p.jsx)("li",{children:Object(p.jsx)(j.b,{to:"/affine-break-out/story",children:"Story"})}),Object(p.jsx)("li",{children:Object(p.jsx)(j.b,{to:"/affine-break-out/theory",children:"Theory"})})]}),Object(p.jsxs)(d.c,{children:[Object(p.jsx)(d.a,{path:"/affine-break-out/story",component:f}),Object(p.jsx)(d.a,{path:"/affine-break-out/theory",component:N}),Object(p.jsx)(d.a,{path:"/affine-break-out/",component:u})]}),Object(p.jsx)("footer",{children:"\xa9 Matej Kerekrety 2021"})]})};i.a.render(Object(p.jsx)(s.a.StrictMode,{children:Object(p.jsx)(k,{})}),document.getElementById("root"))},83:function(e,t,c){},84:function(e,t,c){}},[[197,1,2]]]);
//# sourceMappingURL=main.865f698e.chunk.js.map