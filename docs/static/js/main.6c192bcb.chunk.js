(this["webpackJsonpaffine-break-out"]=this["webpackJsonpaffine-break-out"]||[]).push([[0],{26:function(e,t,c){},27:function(e,t,c){},36:function(e,t,c){"use strict";c.r(t),c.d(t,"Index",(function(){return g}));var n=c(1),s=c.n(n),r=c(15),j=c.n(r),i=c(7),d=c(2),h=(c(26),c(16)),l=c(17),b=c(21),o=c(20),a=(c(27),c(0)),x=function(e){Object(b.a)(c,e);var t=Object(o.a)(c);function c(e){var n;return Object(h.a)(this,c),(n=t.call(this,e)).handleChange=function(e){n.setState({groupSize:e.target.value})},n.handleSubmit=function(e){n.setState({groupSize:n.state.groupSize}),e.preventDefault()},n.state={groupSize:25},n}return Object(l.a)(c,[{key:"render",value:function(){var e=function(e){for(var t=[1,2,3,5,7,11],c=function(t){return t<e?t:"N"},n=function(){var c=t.slice(-1)[0];for(var n in t.reverse()){if(!(t[n]*t[n]>=e))return c;c=t[n]}}(),s=[n+1],r=0;r<n+1;r++){s[r]=new Array(n);for(var j=0;j<n;j++)s[r][j]=new Array(n)}for(var i=0;i<n;i++)for(var d=0;d<n;d++)for(var h=0;h<n;h++)s[i][d][h]=c(h+(i*h+d)%n*n);for(var l=0;l<n;l++)for(var b=0;b<n;b++)s[n][l][b]=c(l+b*n);return s}(this.state.groupSize>1?this.state.groupSize:2);return Object(a.jsxs)("div",{className:"App",children:[Object(a.jsx)("form",{onSubmit:this.handleSubmit,className:"Search",children:Object(a.jsxs)("label",{children:["Your group size:",Object(a.jsx)("input",{type:"number",value:this.state.groupSize,onChange:this.handleChange,size:"3",min:"2",max:"121"})," (2-121)"]})}),Object(a.jsx)("div",{className:"App-header",children:e.map((function(e,t){return Object(a.jsxs)("p",{children:[Object(a.jsxs)("strong",{children:["Round ",t+1]}),": ",e.map((function(e){return Object(a.jsxs)("span",{children:["[",e.join(", "),"] "]})}))]})}))})]})}}]),c}(s.a.Component);var O=function(){return Object(a.jsx)("div",{className:"App",children:Object(a.jsxs)("div",{className:"App-text",children:[Object(a.jsxs)("p",{children:["Once upon a time, we wanted to split 21 people into reasonable sized groups over a couple of rounds such that everyone see each other exactly once. We couldn't solve it. Few years later, I looked back and realised that by using ",Object(a.jsx)("em",{children:"affine planes"})," it can be easily ",Object(a.jsx)("em",{children:"solved"}),"."]}),Object(a.jsxs)("p",{children:[Object(a.jsx)("em",{children:"Affine plane"})," is a concept in abstract algebra / geometry, which allows us to solve this problem. Therefore, the name - ",Object(a.jsx)("em",{children:"Affine Break Out Room"}),". More details in the ",Object(a.jsx)(i.b,{to:"./theory",children:"theory"})," part."]}),Object(a.jsxs)("pre",{children:["Round 1: [0, 1, 2, 3, 4] [5, 6, 7, 8, 9] [10, 11, 12, 13, 14] [15, 16, 17, 18, 19] [20, N, N, N, N]",Object(a.jsx)("br",{}),"Round 2: [0, 6, 12, 18, N] [5, 11, 17, N, 4] [10, 16, N, 3, 9] [15, N, 2, 8, 14] [20, 1, 7, 13, 19]",Object(a.jsx)("br",{}),"Round 3: [0, 11, N, 8, 19] [5, 16, 2, 13, N] [10, N, 7, 18, 4] [15, 1, 12, N, 9] [20, 6, 17, 3, 14]",Object(a.jsx)("br",{}),"Round 4: [0, 16, 7, N, 14] [5, N, 12, 3, 19] [10, 1, 17, 8, N] [15, 6, N, 13, 4] [20, 11, 2, 18, 9]",Object(a.jsx)("br",{}),"Round 5: [0, N, 17, 13, 9] [5, 1, N, 18, 14] [10, 6, 2, N, 19] [15, 11, 7, 3, N] [20, 16, 12, 8, 4]",Object(a.jsx)("br",{}),"Round 6: [0, 5, 10, 15, 20] [1, 6, 11, 16, N] [2, 7, 12, 17, N] [3, 8, 13, 18, N] [4, 9, 14, 19, N]",Object(a.jsx)("br",{})]}),Object(a.jsxs)("p",{children:["We are aware that there are other ways how to solve this problem, e.g. using ",Object(a.jsx)("em",{children:"Kirkman Triple System"}),", which can split 21 people into 7 groups over 10 rounds perfectly. Other solutions are either inefficient (10 rounds per 3 people) or don't include all pairs. Therefore, affine plane sounds like reasonable solution for small group sizes. For other group sizes, I recommend to use ",Object(a.jsx)("a",{href:"http://breakoutroom.pythonanywhere.com/allocate/",children:"BoRAT"})," - a handy tool with a nice ",Object(a.jsx)("a",{href:"https://www.mdpi.com/2073-8994/13/1/13",children:"paper"})," about it."]})]})})},u=c.p+"static/media/order3.a1fd2242.png",p=c(19),f=c.n(p);var m=function(){return Object(a.jsx)("div",{className:"App",children:Object(a.jsxs)("div",{className:"App-text",children:[Object(a.jsxs)("p",{children:["An affine plane is a two dimensional ",Object(a.jsx)("a",{href:"https://mathworld.wolfram.com/AffineGeometry.html",children:"affine geometry"})," constructed over a ",Object(a.jsx)("a",{href:"https://en.wikipedia.org/wiki/Finite_field",children:"finite field"})," (or Galois field), where points and lines satisfy those axioms: [1, 2]"]}),Object(a.jsxs)("ul",{children:[Object(a.jsx)("li",{children:"Given any two points, there is a unique line joining any two points."}),Object(a.jsx)("li",{children:"Each line has at least two points."}),Object(a.jsxs)("li",{children:["Given a point ",Object(a.jsx)("b",{children:"P"})," and a line ",Object(a.jsx)("b",{children:"L"})," not containing ",Object(a.jsx)("b",{children:"P"}),", there is a unique line that contains ",Object(a.jsx)("b",{children:"P"})," and does not intersect ",Object(a.jsx)("b",{children:"P"})]}),Object(a.jsx)("li",{children:"There exist three non-collinear points (points not on a single line)"})]}),Object(a.jsx)("p",{children:"For an affine plane with finite number of points a following is true: [1]"}),Object(a.jsxs)("ul",{children:[Object(a.jsx)("li",{children:"each line contains n points"}),Object(a.jsxs)("li",{children:["each point is contained in ",Object(a.jsx)("code",{children:"n + 1"})," distinct lines"]}),Object(a.jsxs)("li",{children:["there are ",Object(a.jsxs)("code",{children:["n",Object(a.jsx)("sup",{children:"2"})]})," points in each line"]}),Object(a.jsxs)("li",{children:["there are ",Object(a.jsxs)("code",{children:["n",Object(a.jsx)("sup",{children:"2"})," + n"]})," lines"]}),Object(a.jsxs)("i",{children:["The number ",Object(a.jsx)("code",{children:"n"})," is called the order of the affine plane."]})]}),Object(a.jsxs)("p",{children:["Equivalently, we can replace ",Object(a.jsx)("b",{children:"point"})," with ",Object(a.jsx)("b",{children:"person"})," and ",Object(a.jsx)("b",{children:"line"})," with ",Object(a.jsx)("b",{children:"room"}),". Therefore, we have:"]}),Object(a.jsxs)("ul",{children:[Object(a.jsxs)("li",{children:["each ",Object(a.jsx)("em",{children:"room"})," contains ",Object(a.jsx)("code",{children:"n"})," ",Object(a.jsx)("em",{children:"persons"})]}),Object(a.jsxs)("li",{children:["each ",Object(a.jsx)("em",{children:"person"})," is in ",Object(a.jsx)("code",{children:"n + 1"})," distinct ",Object(a.jsx)("em",{children:"rooms"})]}),Object(a.jsxs)("li",{children:["there are ",Object(a.jsxs)("code",{children:["n",Object(a.jsx)("sup",{children:"2"})]})," ",Object(a.jsx)("em",{children:"persons"})," in total"]}),Object(a.jsxs)("li",{children:["there are ",Object(a.jsxs)("code",{children:["n",Object(a.jsx)("sup",{children:"2"})," + n"]})," ",Object(a.jsx)("em",{children:"rooms"})]})]}),Object(a.jsx)("h3",{children:"Example: Affine plane of order 3 or how to break out 9 people"}),Object(a.jsxs)("p",{children:["Let's take a field ",Object(a.jsxs)("strong",{children:["F",Object(a.jsx)("sub",{children:"3"})]})," with elements ",Object(a.jsx)("code",{children:"{0, 1, 2}"})," with addition and multiplication. [3]"]}),Object(a.jsxs)("table",{children:[Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"+"}),Object(a.jsx)("th",{children:"0"}),Object(a.jsx)("th",{children:"1"}),Object(a.jsx)("th",{children:"2"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"0"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("td",{children:"1"}),Object(a.jsx)("td",{children:"2"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"1"}),Object(a.jsx)("td",{children:"1"}),Object(a.jsx)("td",{children:"2"}),Object(a.jsx)("td",{children:"0"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"2"}),Object(a.jsx)("td",{children:"2"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("td",{children:"1"})]})]}),Object(a.jsxs)("table",{children:[Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"x"}),Object(a.jsx)("th",{children:"0"}),Object(a.jsx)("th",{children:"1"}),Object(a.jsx)("th",{children:"2"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"0"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("td",{children:"0"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"1"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("td",{children:"1"}),Object(a.jsx)("td",{children:"2"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"2"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("td",{children:"2"}),Object(a.jsx)("td",{children:"1"})]})]}),Object(a.jsxs)("p",{children:["Now, each point is defined as a pair ",Object(a.jsxs)("code",{children:["(x, y) \u2208 ",Object(a.jsxs)("strong",{children:["F",Object(a.jsx)("sub",{children:"3"}),Object(a.jsx)("sup",{children:"2"})]})]}),", therefore, the total number of points is ",Object(a.jsxs)("code",{children:["n",Object(a.jsx)("sup",{children:"2"})]}),". Then we can draw lines given by ",Object(a.jsx)("code",{children:"y = mx + u"}),", where ",Object(a.jsxs)("code",{children:["m, k \u2208 ",Object(a.jsxs)("strong",{children:["F",Object(a.jsx)("sub",{children:"3"}),Object(a.jsx)("sup",{children:"2"})]})]}),". Each ",Object(a.jsx)("code",{children:"m"})," give us a set of distinct lines for each ",Object(a.jsx)("code",{children:"k"}),"."]}),Object(a.jsxs)("table",{className:"big",children:[Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"m=0"}),Object(a.jsx)("th",{children:"x=0"}),Object(a.jsx)("th",{children:"x=1"}),Object(a.jsx)("th",{children:"x=2"}),Object(a.jsx)("th",{children:"m=1"}),Object(a.jsx)("th",{children:"x=0"}),Object(a.jsx)("th",{children:"x=1"}),Object(a.jsx)("th",{children:"x=2"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"u=0"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("th",{children:"u=0"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("td",{children:"1"}),Object(a.jsx)("td",{children:"2"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"u=1"}),Object(a.jsx)("td",{children:"1"}),Object(a.jsx)("td",{children:"1"}),Object(a.jsx)("td",{children:"1"}),Object(a.jsx)("th",{children:"u=1"}),Object(a.jsx)("td",{children:"1"}),Object(a.jsx)("td",{children:"2"}),Object(a.jsx)("td",{children:"0"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"u=2"}),Object(a.jsx)("td",{children:"2"}),Object(a.jsx)("td",{children:"2"}),Object(a.jsx)("td",{children:"2"}),Object(a.jsx)("th",{children:"u=2"}),Object(a.jsx)("td",{children:"2"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("td",{children:"1"})]})]}),Object(a.jsxs)("table",{className:"big",children:[Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"m=2"}),Object(a.jsx)("th",{children:"x=0"}),Object(a.jsx)("th",{children:"x=1"}),Object(a.jsx)("th",{children:"x=2"}),Object(a.jsx)("th",{children:"m=\u221e"}),Object(a.jsx)("th",{children:"x=0"}),Object(a.jsx)("th",{children:"x=1"}),Object(a.jsx)("th",{children:"x=2"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"u=0"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("td",{children:"2"}),Object(a.jsx)("td",{children:"1"}),Object(a.jsx)("th",{children:"u=0"}),Object(a.jsx)("td",{children:"[0, \u221e)"}),Object(a.jsx)("td",{children:"[0, \u221e)"}),Object(a.jsx)("td",{children:"[0, \u221e)"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"u=1"}),Object(a.jsx)("td",{children:"1"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("td",{children:"2"}),Object(a.jsx)("th",{children:"u=1"}),Object(a.jsx)("td",{children:"[1, \u221e)"}),Object(a.jsx)("td",{children:"[1, \u221e)"}),Object(a.jsx)("td",{children:"[1, \u221e)"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"u=2"}),Object(a.jsx)("td",{children:"2"}),Object(a.jsx)("td",{children:"1"}),Object(a.jsx)("td",{children:"0"}),Object(a.jsx)("th",{children:"u=2"}),Object(a.jsx)("td",{children:"[2, \u221e)"}),Object(a.jsx)("td",{children:"[2, \u221e)"}),Object(a.jsx)("td",{children:"[2, \u221e)"})]})]}),Object(a.jsxs)("p",{children:["See the image below, for each ",Object(a.jsx)("code",{children:"m"})," we have 3 set of lines corresponding to different ",Object(a.jsx)("code",{children:"u"}),". Blue correspond to ",Object(a.jsx)("code",{children:"m=0"}),", purple ",Object(a.jsx)("code",{children:"m=1"}),", green is ",Object(a.jsx)("code",{children:"m=2"})," and red, if you say, is ",Object(a.jsx)("code",{children:"m=\u221e"}),"."]}),Object(a.jsx)("img",{src:u,alt:"Logo"}),Object(a.jsxs)("p",{children:["Every color or ",Object(a.jsx)("code",{children:"m"})," value is one round and every class or ",Object(a.jsx)("code",{children:"u"})," is a room, where 3 three people are located. To put it all together, this is the full schedule for 9 people over 4 rounds:"]}),Object(a.jsxs)("pre",{children:["Round 1: [0, 1, 2], [3, 4, 5], [6, 7, 8] ",Object(a.jsx)("br",{}),"Round 2: [0, 4, 8], [3, 7, 2], [6, 1, 5] ",Object(a.jsx)("br",{}),"Round 3: [0, 7, 5], [3, 1, 8], [6, 4, 2] ",Object(a.jsx)("br",{}),"Round 4: [0, 3, 6], [1, 4, 7], [2, 5, 8] ",Object(a.jsx)("br",{})]}),Object(a.jsxs)("p",{children:["You can do it in the same way for any other ",Object(a.jsx)("code",{children:"n"}),"-",Object(a.jsx)("em",{children:"prime"})," (",Object(a.jsx)("code",{children:"n=2, 3, 5, 7, 11,..."}),"). However, finite / Galois fields exist also for prime factors, i.e. ",Object(a.jsxs)("code",{children:["n=p",Object(a.jsx)("sup",{children:"m"})]}),". Construction for ",Object(a.jsxs)("code",{children:["n=2",Object(a.jsx)("sup",{children:"2"})]})," you can see in [3]."]}),Object(a.jsx)("p",{children:"If you need to make schedule for less than 9 people, e.g. 7 you can remove 7 and 8 from the table."}),Object(a.jsx)("h3",{children:"Python script"}),Object(a.jsx)("p",{children:"There is trivial script for constructing lines for affine plane for prime order."}),Object(a.jsx)(f.a,{gist:"matejker/8606d661d21885e27d0965e4c5553bff",wrapperClass:"gist__bash",loadingClass:"loading__screen",titleClass:"gist__title",contentClass:"gist__content",errorClass:"gist__error"}),Object(a.jsx)("h3",{children:"References:"}),Object(a.jsxs)("ol",{children:[Object(a.jsxs)("li",{children:['Pascoe, Abraham, "',Object(a.jsx)("em",{children:"Affine and Projective Planes"}),'" (2018). MSU Graduate Theses. 3233. ',Object(a.jsx)("a",{href:"https://bearworks.missouristate.edu/theses/3233",children:"Link"})]}),Object(a.jsxs)("li",{children:['Bartlett, Padraic, "',Object(a.jsx)("em",{children:"Minilecture 5: Affine Planes"}),'" (2014).',Object(a.jsx)("a",{href:"http://web.math.ucsb.edu/~padraic/ucsb_2013_14/mathcs103_w2014/mathcs103_w2014_lecture5.pdf",children:"Link"})]}),Object(a.jsxs)("li",{children:['von Gagern, Martin, "',Object(a.jsx)("em",{children:"Affine Plane of Order 4 Picture?"}),'" (2016). Mathematics Stack Exchange.',Object(a.jsx)("a",{href:"https://math.stackexchange.com/questions/1925479/affine-plane-of-order-4-picture",children:"Link"})]})]})]})})},g=function(){return Object(a.jsxs)(i.a,{children:[Object(a.jsx)("h1",{children:"Affine Break Out Room"}),Object(a.jsxs)("menu",{children:[Object(a.jsx)("li",{children:Object(a.jsx)(i.b,{to:"/affine-break-out/",children:"Home"})}),Object(a.jsx)("li",{children:Object(a.jsx)(i.b,{to:"/affine-break-out//story",children:"Story"})}),Object(a.jsx)("li",{children:Object(a.jsx)(i.b,{to:"/affine-break-out//theory",children:"Theory"})})]}),Object(a.jsxs)(d.c,{children:[Object(a.jsx)(d.a,{path:"/affine-break-out//story",component:O}),Object(a.jsx)(d.a,{path:"/affine-break-out//theory",component:m}),Object(a.jsx)(d.a,{path:"/affine-break-out//",component:x})]}),Object(a.jsx)("footer",{children:"\xa9 Matej Kerekrety 2021"})]})};j.a.render(Object(a.jsx)(s.a.StrictMode,{children:Object(a.jsx)(g,{})}),document.getElementById("root"))}},[[36,1,2]]]);
//# sourceMappingURL=main.6c192bcb.chunk.js.map